	
	AMD是有一个浏览器端模块化的一个规范 ，requirejs实现了整个规范

	AMD规定了 使用define方法定义一个模块，使用require方法加载一个模块

	这就意味着 requirejs负责封装一个方法叫define用来定义模块

	再封装一个require方法来加载模块

	模块多数情况下指的是js模块 并且是以文件方式存在（一个文件一个模块）

	如果使用data-main这个属性，那当前路径指的就是data-main的值所在的位置

	在模块内部使用相对路径时，不受到data-main的限制
	//也不完全受baseURL的限制，以文件自身路径为准



	相对路径标准写法应该是.或.开头 
	前面所学不以.或..打头也能表示相对路径
	那浏览器默认帮我们处理成了带.或..的路径了

	在模块内部不写.或..时会受baseUrl的影响
	如果写了则为标准的相对路径，永远相对于模块自身

	如果没有写.或..不会被认为称./ 这时当前的路径是baseUrl所指定的位置